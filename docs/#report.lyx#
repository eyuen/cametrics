#LyX 1.6.3 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble

\usepackage{babel}
\usepackage{ae}
\usepackage{aeguill}
\usepackage{shortvrb}

\usepackage{tabularx}
\usepackage{longtable}
\setlength{\extrarowheight}{2pt}


\@ifundefined{definecolor}
 {\usepackage{color}}{}

\usepackage{multirow}
\usepackage{ifthen}
\usepackage[DIV12]{typearea}
% generated by Docutils <http://docutils.sourceforge.net/>
\newlength{\admonitionwidth}
\setlength{\admonitionwidth}{0.9\textwidth}
\newlength{\docinfowidth}
\setlength{\docinfowidth}{0.9\textwidth}
\newlength{\locallinewidth}
\newcommand{\optionlistlabel}[1]{\bf #1 \hfill}
\newenvironment{optionlist}[1]{\begin{list}{}
  {\setlength{\labelwidth}{#1}
   \setlength{\rightmargin}{1cm}
   \setlength{\leftmargin}{\rightmargin}
   \addtolength{\leftmargin}{\labelwidth}
   \addtolength{\leftmargin}{\labelsep}
   \renewcommand{\makelabel}{\optionlistlabel}}
}{\end{list}}
\newlength{\lineblockindentation}
\setlength{\lineblockindentation}{2.5em}
\newenvironment{lineblock}[1]{\begin{list}{}
  {\setlength{\partopsep}{\parskip}
   \addtolength{\partopsep}{\baselineskip}
   \topsep0pt\itemsep0.15\baselineskip\parsep0pt
   \leftmargin#1}
 \raggedright}{\end{list}}
% begin: floats for footnotes tweaking.
\setlength{\floatsep}{0.5em}
\setlength{\textfloatsep}{\fill}
\addtolength{\textfloatsep}{3em}
\renewcommand{\textfraction}{0.5}
\renewcommand{\topfraction}{0.5}
\renewcommand{\bottomfraction}{0.5}
\setcounter{totalnumber}{50}
\setcounter{topnumber}{50}
\setcounter{bottomnumber}{50}
% end floats for footnotes
% some commands, that could be overwritten in the style file.
\newcommand{\rubric}[1]{\subsection*{~\hfill {\it #1} \hfill ~}}
\newcommand{\titlereference}[1]{\textsl{#1}}
% end of "some commands"
\ifthenelse{\isundefined{\hypersetup}}{
\usepackage[colorlinks=true,linkcolor=blue,urlcolor=blue]{hyperref}
}{}
\title{}
\author{}
\date{}
\raggedbottom
\end_preamble
\use_default_options false
\language english
\inputencoding latin1
\font_roman ae
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
setlength{
\backslash
locallinewidth}{
\backslash
linewidth}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{cametrics-a-novel-data-logger-aggregator-and-visualizer-cloud-servic
e}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Cametrics: A Novel Data Logger, Aggregator, and Visualizer
 Cloud Service}{cametrics-a-novel-data-logger-aggregator-and-visualizer-cloud-se
rvice}
\end_layout

\end_inset

 
\end_layout

\begin_layout Title
Cametrics: A Novel Data Logger, Aggregator, and Visualizer Cloud Service
\end_layout

\begin_layout Standard
\align center
\begin_inset CommandInset label
LatexCommand label
name "cametrics-a-novel-data-logger-aggregator-and-visualizer-cloud-service"

\end_inset


\end_layout

\begin_layout Author
Olmo Maldonado, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{mailto:ibolmo@ucla.edu}{
\end_layout

\end_inset

ibolmo@ucla.edu
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, UCLA Department of Electrical Engineering
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{abstract}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Abstract}{abstract}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section*
Abstract
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "abstract"

\end_inset


\end_layout

\begin_layout Abstract
Logging and visualization of data collected is becoming practical to implement
 in many projects due to a growing number of tools and web services.
 There are difficulties in transferring custom visualizations or measurements
 between projects, however, because of losing compatibility or a heavy learning
 curve in understanding the logging and visualization tools.
 Likewise, the actual logging system, visualization tool, and storage protocols
 are all separate from each other.
 This makes management and deployment a consuming process.
 In order to mitigate these challenges, we propose to standardize the measuremen
t interface, centralize all the collected data, and to format the retrieval
 and visualization of the measured data.
 Cametrics, or campaign metrics, does this by providing a developer with
 client libraries with a simple 
\family typewriter
initialize
\family default
 and 
\family typewriter
measure
\family default
 functions.
 Furthermore, the data is stored in Google App Engine's datastore, which
 allows the system to scale to demand.
 Cametrics can also accept any type of data, and is able to return any format
 that the organizer requests.
 Cametrics has large support for standard statistical summaries, which can
 be visualized with Google Charts or Maps API.
 This paper details the design choices and requirements made to complete
 the first iteration of Cametrics.
 Moreover, we discuss the issues, limitations, evaluation, and future work
 needed for Cametrics.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{introduction}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Introduction}{introduction}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "introduction"

\end_inset


\end_layout

\begin_layout Standard
Logging and measuring usage of a system is an important feedback for system
 debugging and design.
 A developer can monitor the usage of a website by injecting logging calls
 inside of their scripts that log to a flat file or database.
 After some time, the developer creates a script to parse the log and uses
 third party libraries to construct a visualization of the data.
 A trend of number of users per month, for example would be a metric to
 understand if a website is becoming more popular.
 What if the developer wanted to visualize the geolocation of the user's
 IP address? The developer has to create yet another script to mine the
 logs of their web server for all the visitor IP addresses and then geocode
 the IP address.
 Then, he would take the GPS coordinates and use another third party service
 to display the data on a world map.
 As the complexity of the visualization or requirements of the developer
 grows more and more, more scripts are created which may eventually become
 incompatible across projects or difficult to maintain because of the rapid
 development of the scripts.
\end_layout

\begin_layout Standard
This is an ongoing challenge in participatory sensing (coordinated data
 gathering by individuals, groups, and communities to explore the world
 around them) campaigns.
 Campaigns are targeted and coordinated data collection efforts between
 an organizer (anyone with an interest in coordinating a data-gathering
 campaign) and a large number of participants of the campaign.
 In order to manage the campaign, an organizer typically creates a new web
 site to personalize the campaign for the participants and other guests
 that might like to join the campaign.
 Although the act of creating a new website is trivial, migrating subsystems
 like a logging system are non-trivial due to organizers expertise in the
 subsystem.
 Moreover, the original author of the scripts may not be the current organizer
 of the campaign.
 Due to the environment of participatory sensing there is a need to minimize
 the amount of code and settings changes that an organizer must do in order
 for the system to be a fully functional campaign.
\end_layout

\begin_layout Standard
In this paper, we discuss such a participatory sensing campaign: What's
 Invasive
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id2}{
\end_layout

\end_inset

1
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 What's Invasive is a test pilot campaign that is an effort to equip the
 National Park Services with GPS-ready smart phones that can be used to
 map the Santa Monica mountains for invasive species.
 Invasive species are species that are not native to the area that if otherwise
 left alone would consume resources, which may endanger the indigenous plants.
\end_layout

\begin_layout Standard

\size scriptsize
Cametrics, or campaign metrics, was created to reduce the complexity in
 migrating the logging systems between new campaigns and to reduce the amount
 of code to produce visualization of the data collected from participants
 and/or the systems that the campaign is running on.
 After extensive work, and research, we have found that Cametrics' scope
 is no longer narrowed to just campaigns.
 Cametrics has become a general-purpose logging, aggregator, and visualization
 web service that any device that supports the HTTP protocol can use to
 log data, which can then be rendered as visualization or any other requested
 format.
 Cametrics lives in the cloud and is capable of scaling between large numbers
 of concurrent users.
 Most important, due to the mission to be simple and flexible, Cametrics
 is easy to get started and producing visualizations.
 This is a divergence from other logging and visualization web services.
 Furthermore, Cametrics is unique in its way it aggregates the data by having
 standard summarization classes per data type.
 Cametrics also supports large number of types, which is contrary to many
 web services, which would constrict an organizer to a fixed set of types.
 For example, location and GPS data types are now supported and summarized
 to simplify the organizer's time in understanding the area covered by a
 participant.
 If the system does not support a format or type, Cametrics can be easily
 be extended by a developer contributed classes which will work as plug
 and play classes.
\end_layout

\begin_layout Standard

\size scriptsize
In this paper, we discuss related web services that have a similar scope
 as Cametrics and how they compare.
 We list the contributions made by this research and how we stand apart
 from the previous works.
 The requirements and choices made on the design of the system and the architect
ure of the system are also included.
 Lastly, we conclude with the evaluation of the system with quantitative
 and qualitative measurements and future work that is interesting or are
 required for Cametrics to move forward.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id2}{
\end_layout

\end_inset


\begin_inset Formula $^{1}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://whatsinvasive.com/}{
\end_layout

\end_inset

http://whatsinvasive.com/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hrulefill
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{related-work}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Related Work}{related-work}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Related Work
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "related-work"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% need intro to section 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The following table compares other web services against Cametrics.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="7">
<features islongtable="true">
<column alignment="none" valignment="top" width="0">
<column alignment="none" valignment="top" width="0">
<column alignment="none" valignment="top" width="0">
<column alignment="none" valignment="top" width="0">
<column alignment="none" valignment="top" width="0">
<column alignment="none" valignment="top" width="0">
<column alignment="none" valignment="top" width="0">
<row endhead="true" caption="true">
<cell multicolumn="1" alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size scriptsize
Web Service Comparison against Cametrics
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row endhead="true">
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
 
\series bold
Critera
\series default
  
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
 
\series bold
ManyEyes
\series default
  
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
 
\series bold
TrackNGraph
\series default
  
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
 
\series bold
Mycrocosm
\series default
  
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
 
\series bold
Trendrr
\series default
  
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
 
\series bold
Timetric
\series default
  
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
 
\series bold
Cametrics
\series default
  
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
API 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id12}{
\end_layout

\end_inset

2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Schemaless 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Formless Setup 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Formless Entry 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id13}{
\end_layout

\end_inset

3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Auto.
 Visual.
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id14}{
\end_layout

\end_inset

4
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id15}{
\end_layout

\end_inset

5
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id16}{
\end_layout

\end_inset

6
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Editable Data 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id17}{
\end_layout

\end_inset

7
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Planned
\emph default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Selectable Data
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id18}{
\end_layout

\end_inset

8
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Planned
\emph default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Shareable 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id19}{
\end_layout

\end_inset

9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Aggregator 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Embeddable 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id20}{
\end_layout

\end_inset

10
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Yes
\series default
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id12}{
\end_layout

\end_inset


\begin_inset Formula $^{2}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Supports bulk uploads (CSV), individual values, and increment decrement
 value.
 Access to the data set with a generated hashed key.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id13}{
\end_layout

\end_inset


\begin_inset Formula $^{3}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Mycrocosm uses a single input form field with a unique Domain-Specific-Language
 (DSL) for inputs.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id14}{
\end_layout

\end_inset


\begin_inset Formula $^{4}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Automatic visualization occurs for specific options and choices, selected
 by user.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id15}{
\end_layout

\end_inset


\begin_inset Formula $^{5}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Only supports automatic visualization of a trend chart (line chart).
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id16}{
\end_layout

\end_inset


\begin_inset Formula $^{6}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Only supports automatic visualization of a trend chart (line chart).
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id17}{
\end_layout

\end_inset


\begin_inset Formula $^{7}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Data source property and delete of the data set are the only forms of data
 edit.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id18}{
\end_layout

\end_inset


\begin_inset Formula $^{8}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 This excludes datum selection (e.g.
 first, last, by specific timestamp) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id19}{
\end_layout

\end_inset


\begin_inset Formula $^{9}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Note, in ManyEyes all data posted is shared publicly without the option
 for privacy.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id20}{
\end_layout

\end_inset


\begin_inset Formula $^{10}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Embeds a flash object, which may not be available to the client browser
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{criteria}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Criteria}{criteria}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Criteria
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "criteria"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The following defines the criteria evaluation.
 
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

API
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the service provides a HTTP RESTful API (independent of the features
 the API supports).
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Schemaless
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the user, or developer of the system, does not have to define for a
 data set any unit, type, or attribution in order for the 
\series bold
backend
\series default
 of the system to function appropriately.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Formless Setup
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the user, or developer of the system, is not troubled to fill out a
 form on a website in order for the system to create a new data set, then
 we say that the system has a formless setup.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Formless Entry
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the user of the system is not required to manually, submit a form to
 enter a single value or a bulk of values.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Auto.
 Visual (Automatic Visualization)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the service automatically generates any form of visualization without
 the intervention of the user or developer.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Editable Data
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the system allows at least edit or delete for a set or individual data.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Selectable Data
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the system has the ability to return to the requestor a subset of the
 data (with the exception of single values -- first or last value, for instance).
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Sharable
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the system has the ability to share the data or visualization between
 an individual or a group of persons.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Aggregator
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the system has the ability to summarize, or aggregate, the data submitted
 for statistical understanding.
 For example, for a number series if the system can return the maximum value
 passed
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Embeddable
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 If the system has the ability to provide the user with a manner to publish
 to a website or to copy/paste some code into another website without any
 further user intervention.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{manyeyes}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{ManyEyes11}{manyeyes}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
ManyEyes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id22}{
\end_layout

\end_inset

11
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "manyeyes"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
ManyEyes, by the IBM's Visual Communication Lab, allows the community to
 take public data sets and visualize them from a slew of available visuals.
 Due their strong focus on visualizations, they have lacked support many
 of the criteria.
 The social and the wide variety of visualization options, however, could
 and should be implemented in Cametrics in the future.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id22}{
\end_layout

\end_inset


\begin_inset Formula $^{11}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://manyeyes.alphaworks.ibm.com/manyeyes/}{
\end_layout

\end_inset

http://manyeyes.alphaworks.ibm.com/manyeyes/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{track-n-graph}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Track-n-Graph12}{track-n-graph}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Track-n-Graph
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id24}{
\end_layout

\end_inset

12
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "track-n-graph"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Track-n-Graph is a tool to track anything about your own personal life.
 Track-n-Graph depends highly on user's input on the type, unit, and other
 attributes so that the data set that is uploaded can be visualized correctly.
 All steps in the flow of the data the users have a critical role.
 Track-n-Graph's lack of an API, for instance, forces the users to go on
 their web site to upload bulk sets of data in addition to the user having
 to setup a schema of the data appropriately before any uploads can occur.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id24}{
\end_layout

\end_inset


\begin_inset Formula $^{12}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://www.trackngraph.com/www/}{
\end_layout

\end_inset

http://www.trackngraph.com/www/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{mycrocosm}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Mycrocosm13}{mycrocosm}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Mycrocosm
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id26}{
\end_layout

\end_inset

13
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "mycrocosm"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Mycrocosm is a form of microblogging with the use of visualization.
 Assogba, et.
 al., had similar objectives with Mycrocosm as Cametrics.
 Mycrocosm attempts to reduce the time to report/collect the user data by
 simplifying the user interface to report new data to the system.
 To enter data a user follows a simple Domain Specific Language (DSL) to
 denote new data sets or new values for a data set.
 Furthermore, Mycrocosm appears to be schemaless, which has the added benefit
 of reducing the complexity of the DSL.
 For time inputs, for example, the user just has to have 'time' as part
 of the input string and the type of the data set is automatically associated
 with time intervals.
 Unfortunately, they do not have an API or an aggregation (summary) of the
 data passed to the data sets.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id26}{
\end_layout

\end_inset


\begin_inset Formula $^{13}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://mycro.media.mit.edu/}{
\end_layout

\end_inset

http://mycro.media.mit.edu/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{trendrr}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Trendrr14}{trendrr}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Trendrr
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id28}{
\end_layout

\end_inset

14
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "trendrr"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Trendrr takes public data sources and creates trend lines from the data
 received.
 Trendrr has custom data input, but is limited to the allowed data types
 that can be passed.
 Trendrr also has restrictions on how to select or delete portions of the
 data.
 Otherwise, Trendrr follows similar features as Cametrics in that they support
 an API for client input.
 This allows a generic device to create a data source stream for 
\emph on
many
\emph default
 others to use the feed for their own purposes.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id28}{
\end_layout

\end_inset


\begin_inset Formula $^{14}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://trendrr.com/}{
\end_layout

\end_inset

http://trendrr.com/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{timetric}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Timetric15}{timetric}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Timetric
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id30}{
\end_layout

\end_inset

15
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "timetric"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Timetric is a tool for visualizing statistical data.
 Timetric became very close to supporting most of the criteria that would
 satisfy the requirements for the project.
 Unfortunately, their focus of their service is strictly on time series
 events, in other words on number value inputs.
 Aggregation of the data is also an unsupported feature.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id30}{
\end_layout

\end_inset


\begin_inset Formula $^{15}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://timetric.com/}{
\end_layout

\end_inset

http://timetric.com/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hrulefill
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{contributions}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Contributions}{contributions}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Contributions
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "contributions"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Camertrics is a new take on the data visualization, aggregation, and logging.
 In all the services, no one attempts to log data as it is being pushed
 by a script.
 The only one comparable to that is trendrr but they use public data streams,
 which do not have the same data rate as participatory campaigns and therefore
 are difficult to make clear comparison if they can support such a feature.
 Moreover, some of the services are strict in the type of data that is passed
 into the system.
 In contrast, Cametrics accepts any data type as passed by the organizer.
 If the system does not support the type, it is a matter of extending a
 subclass and following the interface defined in the parent class.
 Afterwards the system is capable of supporting the type.
 Likewise, formats as returned by Cametrics are independent on the limitations
 of the system.
 New formats can be added in hours and organizers can contribute their own
 Renderer classes.
 By far the biggest contribution is the simplicity in getting started and
 visualizing the data collected, or being collected.
 All other services require the user to build the visualization, for Cametrics
 the visualization is automated and can be customized to fit their needs.
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% open source project, free, and can be used personally 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hrulefill
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{system-design}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{System Design}{system-design}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
System Design
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "system-design"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{design-principles}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Design Principles}{design-principles}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Design Principles
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "design-principles"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The design of the system should support flexibility, accessibility, and
 extensibility principles.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{flexibility}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Flexibility}{flexibility}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Flexibility
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "flexibility"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The developer should not have to learn a new language or have formal training
 on database system design to understand how to create or organize data
 sets.
 The system should conform to the developer's own concept of how the data
 is organized -- be it hierarchical or relational.
 Likewise, the system should encourage code reuse, simplicity (KISS), and
 intuitiveness when defining new data sets and recalling values or statistics
 from the system.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{accessibility}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Accessibility}{accessibility}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Accessibility
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "accessibility"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The system should be accessible programmatically and through an interface
 on a website.
 In either case, the system should have standard Create, Retrieve, Update,
 and Delete operations for all data sets, datum, and campaigns.
 The system should have a 99.9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

%
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 up time and the responsiveness of the upload and download mechanisms of
 the site should be responsive so that Cametrics do not bottleneck systems
 that embeds or pushes data out and into the system.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{extensibility}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Extensibility}{extensibility}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Extensibility
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "extensibility"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Since campaigns are rapidly being deployed and user requirements per campaign
 fluctuate per client basis, the system has to have the ability to start
 with a base class of standard features but be able to support outside developme
nt of the system.
 At each critical stage of the data flow from the input, processing, storage,
 retrieval, and the visualization should have a standard interface that
 a developer can use to subclass into a specific purpose that may not have
 been covered.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{platform-selection}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Platform Selection}{platform-selection}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Platform Selection
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "platform-selection"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
In selecting a platform to build Cametrics, one has a large variety of options
 that range from building your own personal framework, using a framework
 solution, or using a cloud service.
 Although there is great benefit, and practice, in creating your own framework
 or utilizing a known, and popular, framework solution, which includes an
 ORM, and a standard DB (which can then be deployed to Amazon's EC2) we
 found Google's App Engine to be most appropriate for the system.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{home-brew-or-framework-symfony-doctrine-postgresql-solution}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Home Brew or Framework (Symfony, Doctrine, PostgreSQL) Solution}{
home-brew-or-framework-symfony-doctrine-postgresql-solution}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Home Brew or Framework (Symfony, Doctrine, PostgreSQL) Solution
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "home-brew-or-framework-symfony-doctrine-postgresql-solution"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The strength in creating an in-house solution by starting from scratch or
 selecting from a popular solution such as Symfony
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id35}{
\end_layout

\end_inset

16
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, Doctrine
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id36}{
\end_layout

\end_inset

17
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, and PostgreSQL
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id37}{
\end_layout

\end_inset

18
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, is in the flexibility in owning your own system.
 There's no quota limit, no time limit (assuming you remove execution limit
 in the programming language configurations -- PHP's 
\family typewriter
set
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

time
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

limit
\family default
, for example), and there's no unexpected platform limitations that we might
 encounter by using a specific version of a language or missing dependencies
 due to system security measures by the platform developers.
 In summary, there are less things that one will be surprised by.
\end_layout

\begin_layout Standard

\size scriptsize
The downfall of a home brew or even using popular frameworks is the learning
 curve.
 This is especially true for the home brew system, which has minimal documentati
on and maintenance support from a community.
 For the popular framework solution, it is less of a problem because the
 frameworks tend to have a large and active community to improve documentation
 and troubleshooting of the system usage and bugs; but due to the large
 number of framework components one would have to learn multiple tools before
 one can understand how to troubleshoot errors.
 Additionally there is no guarantee that the system is scalable or responsive.
 Due to the prototype nature of most projects, one cannot load the testing
 environment with stress tests or real world usage.
 On average, most systems have to go an extensive testing to realize that
 a large portion of code worked but was extremely ineffective to return
 results in a responsive manner.
\end_layout

\begin_layout Standard

\size scriptsize
A counter argument would be to use Amazon's EC2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id38}{
\end_layout

\end_inset

19
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 to compliment the home brew or framework solution so that it 
\emph on
becomes
\emph default
 scalable.
 In other words, use more resources only when necessary.
 While this may be true, we argue that the system is not scalable.
 The system was simple fed more fuel to consume.
 Using EC2 will not address the non-scalable portions of the system and
 will only accrue costs which will then make the service impossible to run
 for free or without support from the community.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id35}{
\end_layout

\end_inset


\begin_inset Formula $^{16}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://symfony-project.org/}{
\end_layout

\end_inset

http://symfony-project.org/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id36}{
\end_layout

\end_inset


\begin_inset Formula $^{17}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://doctrine-project.org/}{
\end_layout

\end_inset

http://doctrine-project.org/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id37}{
\end_layout

\end_inset


\begin_inset Formula $^{18}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://postgresql.org/}{
\end_layout

\end_inset

http://postgresql.org/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id38}{
\end_layout

\end_inset


\begin_inset Formula $^{19}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://aws.amazon.com/ec2/}{
\end_layout

\end_inset

http://aws.amazon.com/ec2/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{google-s-app-engine}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Google's App Engine20}{google-s-app-engine}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Google's App Engine
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id41}{
\end_layout

\end_inset

20
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "google-s-app-engine"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Almost the reciprocal of the previous platform considerations, Google App
 Engine has a standard look and feel.
 The platform runs under Python 2.5.2, and only Python.
 All necessary packages to run a full-fledge system is already included
 in the SDK and makes getting started a breeze.
 This should satisfy a concern that the system may become unmanageable between
 the number of administrators and developers that shift and join the team
 as the years and use of the system progresses.
 Furthermore, the SDK makes the distribution of 
\begin_inset Quotes eld
\end_inset

Cametrics
\begin_inset Quotes erd
\end_inset

 as an open source project more appealing for others to use for their own
 projects to host to other people or domains.
\end_layout

\begin_layout Standard

\size scriptsize
The app engine also has a unique technology not common to the previous platforms
: BigTable [
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{bigtable}{
\end_layout

\end_inset

BigTable
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

].
 The BigTable has an interesting property that each entity (or record) is
 unique from each other.
 One record may have x-number of attributes (or columns) associated to the
 entity.
 This can differ from the kind (or table) definition that was defined in
 a model (schema) file.
 This is a very appealing property.
 One of the criteria discussed previously in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#criteria}{
\end_layout

\end_inset

Criteria
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section is flexibility.
 If the columns are not fixed and we can create new columns for an object
 at run time, then this allows us to create decorator modules that receive
 the records, which then modify the record columns without knowledge of
 the rest of the system.
 ..
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

^
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

^
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 may not be done
\end_layout

\begin_layout Standard

\size scriptsize
We are also guaranteed that the system will be accessible and scalable.
 The deployed application Cametrics, will run on Google's infrastructure
 and it is very unlikely that their systems will go down without anyone
 noticing.
 Outsourcing the maintenance of the system is very appealing because this
 allows us to focus strictly on the code quality and usage of the system.
 The site is almost guaranteed to be scalable not because we are in the
 
\begin_inset Quotes eld
\end_inset

cloud
\begin_inset Quotes erd
\end_inset

 but because we are forced to be scalable.
 Google has a 30 second deadline that if a script does not finish within
 30 seconds all operations seize and a 
\family typewriter
DeadlineExceptionError
\family default
 is raised and the system has to respond within a few microseconds to handle
 the exception or the exception will terminate the running code.
 In the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#limitations-and-requirements}{
\end_layout

\end_inset

Limitations and Requirements
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 we discuss other Google App Engine limitations and how they forced a specific
 manner of designing the internals of the system.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id41}{
\end_layout

\end_inset


\begin_inset Formula $^{20}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://code.google.com/appengine/}{
\end_layout

\end_inset

http://code.google.com/appengine/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{bigtable}{
\end_layout

\end_inset

[
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

BigTable]
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newcounter{listcnt0}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{list}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Alph{listcnt0}
\end_layout

\end_inset

.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
usecounter{listcnt0}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
addtocounter{listcnt0}{5}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
setlength{
\backslash
rightmargin}{
\backslash
leftmargin}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 Chang, J.
 Dean, S.
 Ghemawat, W.
 C.
 Hsieh, D.
 A.
 Wallach, M.
 Burrows, T.
 Chandra, A.
 Fikes, and R.
 E.
 Gruber.
 BigTable: A distributed storage system for structured data.
 In Operating Systems Design and Implementation, 2006.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
par 
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{list}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{limitations-and-requirements}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[3]{Limitations and Requirements}{limitations-and-requirements}
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph*
Limitations and Requirements
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "limitations-and-requirements"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
In the process of design and testing of the system, the following limitations
 became strict requirements.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{deadlines}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[4]{Deadlines}{deadlines}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subparagraph*
Deadlines
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "deadlines"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Google App Engine has a strict execution time deadline.
 In other systems, one could change the execution time limit to more than
 30 seconds, but in Google App Engine, all requests are given a 30-second
 window to execute.
 If the request handler script fails to terminate before the deadline, the
 script is terminated by a 
\family typewriter
DeadlineException
\family default
 exception.
 Simple optimizations can lend a big hand to reducing the latency of a script.
 For example, maintenance of your code and keeping it simple and with minimal
 dependencies has an immediate benefit in the execution time.
 For example, the first iteration of Cametrics all critical paths used Django
 1.0.2 framework (in Google App Engine SDK, Django 0.96 is available) to handle
 requests.
 Because the 1.0.2 version of Django is not included in the SDK, a separate
 
\family typewriter
.zip
\family default
 archive of all the Django files is used in order to pass the 1000 files
 allowed in an application requirement.
 At every request, the zip file had been unzipped and loaded onto the Python
 runtime so that the framework can properly handle the request.
 This meant that every request had a fixed cost of a few seconds.
 Although this was not a big concern in the processing, other issues will
 be discussed in this section, a few seconds can be saved by removing this
 dependency from the critical paths.
 In a newer iteration of Cametrics, the POST and GET of data paths have
 been regressed to only use native SDK environment.
 As a result, GET operations are taking milliseconds in response rather
 than seconds.
 The difference is very apparent to a user.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{quotas}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[4]{Quotas21}{quotas}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subparagraph*
Quotas
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\size scriptsize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id43}{
\end_layout

\end_inset

21
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "quotas"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Everyday an application under the Google App Engine platform has to execute
 within a certain quota that is limited per day and per rate.
 For example, the CPU Time spent in a day may not exceed 46.30 CPU hours.
 Requests, for example, may not exceed 133328 requests in a day and cannot
 exceed 500 requests per seconds.
 Understandably these quotas and requirements are set to prevent system
 overloading and for ensuring equal share of the platform.
\end_layout

\begin_layout Standard

\size scriptsize
With billing enabled, these limits may change and daily limits are increased.
 For example, the requests allowed in a day can change to 43,000,000 requests
 and the rate allowed is now 30,000 requests/minute.
 From speaking to a Google App Engine developer in the bi-monthly Internet
 Relay Chat (IRC) sessions, even enabling the Billing without a set budget
 has an immediate impact on the system performance.
 More tests are needed to verify this claim.
\end_layout

\begin_layout Standard

\size scriptsize
However, even with billing enabled there are fixed requirements that a developer
 must obey.
 File count limit, for example, states that an application may not have
 more than 1000 files in an application.
 This prevents users using the App Engine as a data warehouse.
 Likewise, one cannot exceed 1 MB per record size in the datastore.
 There are many more quota limits and many more hidden, or at least not
 well outlined, that an application has to follow.
\end_layout

\begin_layout Standard

\size scriptsize
Even with these requirements, a developer learns how to adjust the design
 of the system and perhaps it is warranted to claim that out of necessity
 a stronger and faster system is built.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id43}{
\end_layout

\end_inset


\begin_inset Formula $^{21}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://code.google.com/appengine/docs/quotas.html}{
\end_layout

\end_inset

http://code.google.com/appengine/docs/quotas.html
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{timeouts}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[4]{Timeouts}{timeouts}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subparagraph*
Timeouts
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "timeouts"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
After deploying Cametrics and a few number of users of the What's Invasive
 campaign started contributing data to the campaign, we noticed a large
 number of Deadline Exceptions.
 After some investigation, we found that there were two reasons for this
 occurrence.
 First, the number of data points passed to the system was well over 50
 records.
 For each record a statistic and histogram record, needed to be retrieved
 or created from the datastore.
 These retrieves or creates per 50 records has an immediate toll on the
 execution time.
 Moreover, for each of the 50 records and any modified statistic or histogram
 record each had to be saved to the datastore before the execution would
 finish.
 Evidently pulling, updating, and saving per record was an efficient design
 choice.
 This has since been modified and now the goal for this critical path is
 to reach a near 1:1 ratio (meaning for 1 data record, 1 put or save transaction
s required).
 This is discussed further in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#input-processing}{
\end_layout

\end_inset

Input Processing
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section.
\end_layout

\begin_layout Standard

\size scriptsize
What we were soon to discover, however, of doing a 1:1 optimization was
 that the datastore is sometimes incapable of storing large number of modules
 in one transaction.
 When we attempted to save 1000 and more entities in one transaction (using
 a single 
\family typewriter
db.put
\family default
 with a list, or array, of 1000 entities) a sudden rise in 
\family typewriter
Timeout
\family default
 exceptions.
 After doing some research, this is yet another one of those limitations
 by the Google App Engine that has not been underlined by any documentation.
 The responses to the 
\family typewriter
Timeout
\family default
 exceptions in the Google Discussion Group for the App Engine, the Google
 Developers suggest that this may be due to internals not responding on
 time to save the entities and that the current solution is to 
\begin_inset Quotes eld
\end_inset

try again.
\begin_inset Quotes erd
\end_inset

 As a result, a new algorithm that attempts to save all the datastore was
 devised and further discussed in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#input-processing}{
\end_layout

\end_inset

Input Processing
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{instabilities}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[4]{Instabilities}{instabilities}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subparagraph*
Instabilities
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "instabilities"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Similarly to the 
\family typewriter
Timeout
\family default
 exceptions, another unexpected exceptions were being raised when we wanted
 to wipe the datastore (Google App Engine) of all the data that had been
 saved in one day.
 In particular, we were anticipating large volume of data from the campaign
 and we wished to have a clean datastore to so that we can understand the
 impact of a real world usage on the data store.
 Although these timeouts were of no severity, since we were Bulk deleting
 the data, we soon found out that there is collateral damage when doing
 bulk delete on the Google datastore.
 After some time of deleting all the data, we were soon pressed to find
 that the site, and system, were behaving erratically.
 After some investigation, other developer have reported incidents that
 after massive deletions of the datastore their system became unstable and
 that only after a large period of time did the system start to behave as
 expected.
 This is an ongoing issue for the Google App Engine developers, and our
 only solution is to be more careful with the data that we upload to the
 application.
 As a result, a separate application has been created (
\family typewriter
cametrics-stress
\family default
) to be used a testing and staging environment.
 We found that after 4 days of allowing the Cametrics application to have
 0 data contributed (we used cametrics-stress as a temporary datastore),
 that on the 4th day we found the system to start behaving correctly by
 showing some data that did not get deleted correctly.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{inputs}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Inputs}{inputs}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Inputs
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "inputs"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
As discussed in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#flexibility}{
\end_layout

\end_inset

Flexibility
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 subsection, the allowed inputs to the system should have minimal restrictions
 and low number of requirements for the user can start to measure (log)
 data to the System.
 The formats allowed as inputs should also accept various popular formats
 like CSV, JSON, or at the root of the allowed accepted values a simple
 
\family typewriter
POST
\family default
 with multiple or single value for the 
\family typewriter
value
\family default
 field.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{required-outputs}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Required Outputs}{required-outputs}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Required Outputs
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "required-outputs"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
At a minimum, the system should return the logged data and any summaries/statist
ics that were computed as the data had arrived in the requested format provided
 by the user.
 Additional formats, or allowed outputs, should include images for Charts
 and JavaScript objects for easily populating a Google Maps API.
 These are the typical tools used by researchers to visualize statistical
 data as well as representing a location trace as a polyline or a series
 of GMarkers for marking specific points in the path.
 As discussed, the output should support extensibility principle and have
 an accessible interface for a developer to contribute their own output
 format for others to use for their own projects.
 Moreover, the objects that can be selected for the output should be accessible
 without the use of client software and to select the format of the output
 should not require the user to have a client for the system to return the
 data in the requested format.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{processing}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Processing}{processing}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Processing
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "processing"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
There are three processing stages that should occur: preparing, calculating,
 and visualizing the data.
 The prepare process should clean and validate the input to the system.
 The calculations that are executed, according to the type of data, should
 produce, and update, a summary of statistical information for that data.
 Lastly, the developer will use the summaries or the values of as they were
 logged or cleaned by the system and a visualization process should represent
 the data in the requested format and representation by the user or developer.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{proposed-system}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Proposed System}{proposed-system}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Proposed System
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "proposed-system"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Cametrics is the culmination of addressing all the previous design and user
 requirements.
 Cametrics provides other developers with a base class for Summaries, Rendering,
 and Visualizations, which should cover most use cases, but if necessary,
 the system has the ability to accept developer contributed classes and
 should adapt naturally without internal modifications.
 Because the system runs in the Google App Engine, the system can be accessed
 with an uptime of at least 99.9
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

%
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 and the infrastructure will scale (up to the quota limits) without system
 developer's intervention on the system.
 Furthermore, App Engine simplifies the deployment, development, and contributio
ns of the system.
 The development and external developer's contributions are simplified due
 to BigTable's unique property of having a flexible (schemaless) entity
 definition which would allow entities (records) in the system to be decorated
 with additional attributes (columns) by the Summary modules that are applied
 to the type of data passed to the system.
 Additional details of the running system in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#system-architecture}{
\end_layout

\end_inset

System Architecture
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section of this paper.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hrulefill
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{system-architecture}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{System Architecture}{system-architecture}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
System Architecture
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "system-architecture"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
To best describe the architecture, we will use a concrete example.
 At this time a participatory sensing campaign, What's Invasive
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id46}{
\end_layout

\end_inset

22
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, is using Cametrics to provide the participants with feedback in the form
 of statistics of their number of contributions, the coverage of the area
 by the participants, the variety and quantity of the invasive plants that
 have been discovered, and more.
 The objective of the What's Invasive campaign is to empower the National
 Park Services in the Santa Monica Mountains with new tracking and discovery
 technology against invasive species.
 An invasive species is a species that is not indigenous in the area and
 that are consuming resources from native species.
\end_layout

\begin_layout Standard

\size scriptsize
Campaign participants run a campaign client called Campaignr [
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{campaignr}{
\end_layout

\end_inset

Campaignr
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

], which posts sensor data (GPS, tags, and images) to an organizer's script
 on their web server.
 For demonstration purposes, the organizer's script is using the Cametrics
 PHP Client, but this step may have been unnecessary if the organizer had
 prepared the Campaignr client to post appropriately to the Cametrics server
 using HTTP methods.
 In the organizer's script, Cametrics is initialized with a 
\family typewriter
secret key
\family default
 (given to the organizer when they author a campaign via the Cametrics website
 -- the only required step before they can begin using Cametrics).
 The organizer's script will process the data and call the static 
\family typewriter
measure
\family default
 function to log a value to Cametrics.
 This value may be a number, string, location, datetime, and many more.
 See the discussion in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#input-processing}{
\end_layout

\end_inset

Input Processing
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 subsection for more information.
 At the end of the PHP script, all the recorded data is 
\family typewriter
POST
\family default
-ed to the Cametrics server.
 Cametrics then processes the input and calculates summaries, which can
 be used immediately after the request.
 The organizer's website can then include the visualization by requesting
 to the Cametrics server for the namespace, path, and format of the data.
 For example in the following figure, the organizer's website is requesting
 that Cametrics provide all the 
\family typewriter
values
\family default
 that have been posted to the 
\family typewriter
namespace
\family default
 entries with the 
\family typewriter
gc
\family default
 (Google Charts API) format.
 
\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
scalebox{0.500000}{
\end_layout

\end_inset


\begin_inset Graphics
	filename system_overview.png

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size scriptsize
An overview of a simple participatory sensing campaign using Cametrics.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id46}{
\end_layout

\end_inset


\begin_inset Formula $^{22}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://whatsinvasive.com/}{
\end_layout

\end_inset

http://whatsinvasive.com/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{campaignr}{
\end_layout

\end_inset

[
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

Campaignr] 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://wiki.urban.cens.ucla.edu/index.php/Campaignr}{
\end_layout

\end_inset

http://wiki.urban.cens.ucla.edu/index.php/Campaignr
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{structure}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Structure}{structure}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Structure
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "structure"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{uri-format}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{URI Format}{uri-format}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
URI Format
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "uri-format"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Cametrics follows a strict, but flexible, URI format/pattern to access all
 the data sets, summaries, and visualizations stored.
\end_layout

\begin_layout Standard

\family typewriter
\size scriptsize
.../namespace[/path[.format[?query
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

string]]]
\family default
 
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

namespace:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 The namespace is synonymous to a nickname created by the organizer.
 This is contrary to timetric, trendrr, and other web services that allow
 the user to create their own data sets because these services return a
 hashed key for the created data set.
 The hashed key requires the organizer to keep a mapping file/script or
 to use the service's web site to associate a key to a data set.
 A namespace is an unencoded text; the namespace has representation and
 a meaning for the organizer.
 For example, a simple namespace of: 
\family typewriter
'participant.visited'
\family default
 is easy to remember and understand.
 Furthermore, an organizer can use the 
\family typewriter
participant
\family default
 to keep all things that related to the participant together.
 For example, a namespace of 
\family typewriter
'participant.trace'
\family default
 defines a relationship between the trace data and to the participant.
 Moreover, an interesting future work would be to relate data sets across
 multiple campaigns/projects by using the namespace and history of the namespace
 usage (formats requested, visualizations rendered, and most used objects
 of the data set) in order to optimize retrieving of data sets.
\end_layout

\begin_deeper
\begin_layout Standard

\size scriptsize
Even though the example states that the user can use 
\family typewriter
participant.visited
\family default
, but correct to access the namespace with Cametrics is to convert any combinati
on of non-alpha numerical character into a single 
\family typewriter
/
\family default
.
 For example, 
\family typewriter
participant.visited
\family default
 (as entered through the PHP client) would be accessed through HTTP with
 
\family typewriter
participant/visited
\family default
.
 This is also the case for 
\family typewriter
participant::visited
\family default
, which would result in: 
\family typewriter
participant/visited
\family default
.
 This restriction may be removed in the future.
\end_layout

\end_deeper
\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

path:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 The path is an accessor mechanism into the data set.
 The path is best described with a series of examples.
 Assuming the namespace is 
\family typewriter
'participant.trace'
\family default
 and type is 
\family typewriter
'location'
\family default
, the path of 
\family typewriter
values
\family default
 returns all the location values stored on Cametrics.
 The path of 
\family typewriter
stats
\family default
 returns all the statistics calculated by the summary modules that matched
 the type of the data set.
 The path of 
\family typewriter
stats/min.longitude
\family default
 returns a single longitude value (useful for knowing the boundary of the
 data).
 Path of 
\family typewriter
stats/geotudes/37561.91.68.99.62
\family default
 returns the total number of GPS locations that are inside the Geotude
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id51}{
\end_layout

\end_inset

23
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 box (useful for understanding area covered by the participant).
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

format:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 The format similar to file extensions in a file system.
 By appending a 
\family typewriter
.json
\family default
 to a path, Cametrics returns a JSON
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id52}{
\end_layout

\end_inset

24
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 formatted object.
 The 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#renderer}{
\end_layout

\end_inset

Renderer
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 modules define supported formats for Cametrics and have a simple interface
 for an external developer to contribute their own formats.
 For the What's Invasive campaign, for instance, a request was made to support
 rendering location values into a Google Maps API
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id53}{
\end_layout

\end_inset

25
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 ready objects, such as polylines or markers.
 By overwriting a few of the base classes that 
\family typewriter
Renderer
\family default
 module provides, we were able to transform the location traces from one
 representation (a Python dictionary) into a JavaScript string that uses
 the Google Map API's 
\family typewriter
GMarker
\family default
, 
\family typewriter
GLatLng
\family default
 and 
\family typewriter
GPolyLine
\family default
.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

query
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

string:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 The query string is the analogous of passing arguments to a function.
 Each argument is passed along the Render and Visuals modules.
 More documentation is available on the website
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id54}{
\end_layout

\end_inset

26
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, but as an example using the 
\family typewriter
.gchart
\family default
 format and a 
\family typewriter
query
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

string
\family default
 of: 
\family typewriter
?cht=p3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

&
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

chs=250x100
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

&
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

chco=054700
\family default
 informs the Google Chart Renderer that the object should be represented
 as a 3D-pie chart (
\family typewriter
p3
\family default
), the size of the chart should be 
\series bold
250
\series default
 by 
\series bold
150
\series default
 pixels (
\family typewriter
chs
\family default
), and the color of the chart (
\family typewriter
chco
\family default
) should be 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

#
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

054700
\series default
.
 Notice that the parameters are exactly as if someone was using the Google
 Chart API directly.
 The Google Chart formatter happens to generate a URL with the data (
\family typewriter
chd
\family default
) and other data dependent parameters like the x- and y- labels.
 Having to provide a 
\family typewriter
query
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

string
\family default
 is a bit convoluting, so most formatters have default options.
 A future work would be to adjust the default parameters by how organizers
 (or participants) like to view their data by following the system usage.
\end_layout

\begin_layout Standard

\size scriptsize
The following is a complete example of a possible URL that Cametrics supports:
 
\end_layout

\begin_layout Quote

\family typewriter
\size scriptsize
http://cametrics.appspot.com/measure/public
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

key/participant/visits/stats/weekday.gc?cht=bhs
\family default
 
\end_layout

\begin_layout Standard

\size scriptsize
This will use the 
\family typewriter
participant.visits
\family default
 namespace, and access the statistics (
\family typewriter
stats
\family default
) calculated for all the datetime (defined in the statistic object, or the
 data) entries and return a stacked Google Chart's (
\family typewriter
gc
\family default
 an alias for 
\family typewriter
gchart
\family default
) bar graph of all the weekdays (Sunday through Saturday) that the participant
 has visited the website.
\end_layout

\begin_layout Standard

\size scriptsize
With exception of 
\family typewriter
path
\family default
 and 
\family typewriter
query
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

string
\family default
, Cametrics also uses the URI format to accept HTTP POST.
 For bulk uploads, Cametrics currently only accepts bulk uploads POSTs to
 an empty 
\family typewriter
namespace
\family default
.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id51}{
\end_layout

\end_inset


\begin_inset Formula $^{23}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://www.geotude.com/about/nutshell}{
\end_layout

\end_inset

http://www.geotude.com/about/nutshell
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id52}{
\end_layout

\end_inset


\begin_inset Formula $^{24}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://www.json.org/}{
\end_layout

\end_inset

http://www.json.org/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id53}{
\end_layout

\end_inset


\begin_inset Formula $^{25}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://code.google.com/apis/maps/}{
\end_layout

\end_inset

http://code.google.com/apis/maps/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id54}{
\end_layout

\end_inset


\begin_inset Formula $^{26}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://cametrics.appspot.com/}{
\end_layout

\end_inset

http://cametrics.appspot.com/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{modules}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Modules}{modules}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Modules
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "modules"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{models}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[3]{Models}{models}
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph*
Models
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "models"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The models module contains all the kinds (models) known to Cametrics: Campaign,
 Storage, Statistics, and Histogram.
 Each of the models are subclasses of the SerializableExpando (a subclass
 of the 
\family typewriter
db.Expando
\family default
, from App Engine), which has the ability to transform the models into 
\family typewriter
JSON
\family default
 or Python dictionaries.
\end_layout

\begin_layout Standard

\size scriptsize
The Campaign holds all the campaigns known to the system.
 This is equivalent of a project.
 There are no limit to the number of campaigns that an organizer can create
 and the campaign are strictly for separating the datasets from each other
 -- so that there are no namespace collisions -- and for other attributes
 that make up a campaign: title, description, and homepage.
\end_layout

\begin_layout Standard

\size scriptsize
The Storage model houses all the data with campaign, namespace, type, created
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

on, and stats attributes (columns).
 Although the statistics for a data set is unique to each namespace, the
 Storage entities have a referenced property to their statistics to reduce
 the number of requests to the datastore and to simplify the development
 in the other modules (in particular the Stats module).
\end_layout

\begin_layout Standard

\size scriptsize
The Statistics holds all the statistics for a campaign and namespace.
 The stats module will either get or create a statistic entry based on the
 campaign and namespace combination.
 The only defined attributes are the campaign, namespace, count, and histograms.
 The count is the only mandatory statistic because of its use in other statistic
s (for example calculating the mean of a number) and organizer's own tracking.
\end_layout

\begin_layout Standard

\size scriptsize
Histogram model is similar to the statistics model because there are almost
 no attributes attached to the model.
 The histogram has a statistic and name attributes which when combined produces
 the key to the histogram.
 The stats module will try to tally all occurrences to various histograms.
 If the histogram is not stored in the datastore, the tally function will
 add a reference to the statistics, create the Histogram entity, and increment
 the count in the index (attribute) of the Histogram.
 For example in the string summary class, a 'hits' histogram is attached
 to the stats entity for the namespace.
 If the string of the value passed to Cametrics has not been seen before,
 the Histogram entity (created or retrieved) gets a new attribute as the
 value.
 Then, the histogram attribute is incremented to indicate that the value
 has been seen before.
 The next time that Cametrics received the exact (case sensitive) of the
 value, the value for the histogram attribute (of the passed value) will
 be 2.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{stat}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[3]{Stat}{stat}
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph*
Stat
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "stat"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The Stat module contain all the Summary classes known to Cametrics: NoSummary,
 Summary, NumberSummary, StringSummary, DatetimeSummary, and LocationSummary.
 All Summary classes must have a prepare and calculate method which are
 called for each datum in the data passed to Cametrics.
 The prepare method primarily converts the value passed to the system into
 the expected format.
 This is particularly important to datetime and location summaries.
 The DatetimeSummary and LocationSummary normalize the raw string by adding
 to the datum two new attributes: timestamp, datetime and longitude and
 latitude; respectively.
 This allows for the calculate method and other subclasses of these classes
 to have a standard interface to access from the datum.
 If an exception is thrown, or the datum cannot be prepared for processing,
 the datum is invalidated and removed from the input processing pipeline.
\end_layout

\begin_layout Standard

\size scriptsize
All Summaries subclass NoSummary.
 NoSummary's prepare method simply assures that the datum entity passed
 has a value attribute (the raw value) and that it is not empty.
 The calculate method increments the statistic's count by one.
 The NoSummary also defines other helper methods such as invalidate and
 tally.
 The invalidate method adds a private attribute, 
\family typewriter

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

valid
\family default
, that is used by the pipeline stages to remove the datum from being saved
 into the datastore.
 The tally method is a helper for the the histogram classes.
 This reduces the need to understand the intricacies of Cametrics model
 design.
 The required parameter are the statistic entity and the name and index
 of the histogram that needs to be incremented.
\end_layout

\begin_layout Standard

\size scriptsize
NumberSummary's prepare method converts all expected numbers to its appropriate
 type.
 Note, however, that integers stored in the datastore become long integers.
 This is the normal behavior of the datastore.
 The calculate method, currently, adds a min, max, sum, and mean to the
 statistics.
 The min and max are continuously updated if the value is less or greater
 than the min and max values, respectively.
 The sum and mean are accumulated and computed for the running sum and average
 of the data series.
 The NumberSummary matches any of the following types (as provided by the
 organizer in their scripts): number, float, int, integer, long.
\end_layout

\begin_layout Standard

\size scriptsize
StringSummary inherits from the Summary class, which keeps a tally of all
 the values passed.
 The StirngSummary matches all: str, string, and text types passed.
 The prepare method ensures that the system can properly parse the value
 passed into a string.
\end_layout

\begin_layout Standard

\size scriptsize
DatetimeSummary accepts date, datetime, and timestamp values and normalizes
 the datum entities with the timestamp and datetime attributes so that the
 calculate method and other subclasses can properly work with the datum.
 The calculate method creates a number of interesting histograms: years,
 months, days, hours, minutes, seconds, weekdays, dayth, weekdayth, hour.weekday,
 day.hour, and weekday.month.
 Each of these are just counters for the the series of the data passed to
 Cametrics.
 From these buckets one can discern the most active months, hours, minutes,
 weekday (Mon.-Sun.) and even seconds (although this may be removed if we
 find that this histogram is rarely used).
 The dayth and weekdayth buckets are histograms for day and weekday in the
 year.
 After a year this can provide a clear picture of a trend in contributions.
 The hour.weekday, day.hour, and weekday.month have special meanings.
 The hour.weekday is a timecard that can be visualized with a bubble scatter
 plot.
 The size of the bubble is the value at the hour.weekday, and the indexing
 to the chart is done by the '.' separated values.
 For example, 
\family typewriter
'8.1' = 2
\family default
 indicates that there were two events that occured at 8 am on Monday (
\family typewriter
1
\family default
).
 This is similar to the other 
\family typewriter
'.'
\family default
 separated attributes.
\end_layout

\begin_layout Standard

\size scriptsize
LocationSummary accepts location and gps type inputs.
 For each data passed, LocationSummary prepare normalizes each datum entry
 with longitude and latitude.
 In the calculate method, we are currently augmenting the datum entry with
 a min, max longitude and latitude for creating a boundary of the data set.
 Moreover, the calculate method adds a geotudes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id56}{
\end_layout

\end_inset

27
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 histograms which up to 7 grid resolutions.
 For example, an input of 
\family typewriter
-118.44271302223206,34.06945813747638
\family default
 would have up to 
\family typewriter
37561.95.35.07.52.48.16
\family default
 indexable values.
\end_layout

\begin_layout Standard

\size scriptsize
Currently the system does not support Intervals (start and stop timestamps),
 will soon be added due to its importance.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id56}{
\end_layout

\end_inset


\begin_inset Formula $^{27}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://www.geotude.com/about/nutshell}{
\end_layout

\end_inset

http://www.geotude.com/about/nutshell
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{renderer}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[3]{Renderer}{renderer}
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph*
Renderer
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "renderer"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Renderer classes have a very similar interface to Summary classes in order
 to minimize the complexity in developing new subclasses.
 The Renderer classes that are currently supported: NoRenderer, Renderer,
 GChartRenderer, and GMapRenderer.
\end_layout

\begin_layout Standard

\size scriptsize
The NoRenderer defines the interface that all other renderer classes should
 use.
 The 
\family typewriter
get
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

values
\family default
, 
\family typewriter
get
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

statistics
\family default
, 
\family typewriter
render
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

values
\family default
, 
\family typewriter
render
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

stats
\family default
, and 
\family typewriter
render
\family default
 are all the functions that the subclasses may need to override.
 By default, the 
\family typewriter
get
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

*
\family default
 methods return empty list and dictionaries.
 The Renderer class override the get methods for centralizing a single point
 to get the values and statistics.
\end_layout

\begin_layout Standard

\size scriptsize
The JSONRenderer matches the JSON format, and converts all values into JSON
 ready objects by replacing the datastore specific types into types that
 can be simplejson
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id59}{
\end_layout

\end_inset

28
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 can convert into a JSON string.
 Additionally, the render method returns a JSON object with the values and
 stats if the path is empty.
 Otherwise, if the path is stats or values it returns the JSON object for
 the object as described in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#uri-format}{
\end_layout

\end_inset

URI Format
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section.
\end_layout

\begin_layout Standard

\size scriptsize
The GChartRenderer matches gc and gchart formats and redirect the user to
 a generated url as specified by the Google Chart API.
 Similar to the JSONRenderer, the GChartRenderer converts the values and
 stats into dictionaries or objects that the Visualize module can accept.
 The Visualize module then has the logic necessary to transform the object
 passed to it (either a list of values, statistic dictionary, or an object
 within the statistic).
\end_layout

\begin_layout Standard

\size scriptsize
GMapRenderer matches gm or gmap formats and currently only support the rendering
 of values.
 Using the 
\family typewriter
type
\family default
 parameter in the query string (see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#uri-format}{
\end_layout

\end_inset

URI Format
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

) the GMapRenderer renders the values as a JSON list (when type is 
\family typewriter
raw
\family default
), a JSON dictionary for an encoded polyline (when type is 
\family typewriter
encoded
\family default
), a GMap API-ready encoded polyline (when type is 
\family typewriter
polyline
\family default
), or as a GMap API-ready markers (when type is 
\family typewriter
markers
\family default
).
 The last two cases follow a simple example
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id60}{
\end_layout

\end_inset

29
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 [by the Google Map API.
 The GMapRenderer also supports 
\family typewriter
callback
\family default
 and 
\family typewriter
class
\family default
 parameter in the query string which will format the string returned by
 the renderer to do a standard JavaScript function call with the first parameter
 as the object returned, or similarly to use a map class to directly add
 the overlay (polyline or markers) directly.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id59}{
\end_layout

\end_inset


\begin_inset Formula $^{28}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://undefined.org/python/
\backslash
#simplejson}{
\end_layout

\end_inset

http://undefined.org/python/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

#
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

simplejson
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id60}{
\end_layout

\end_inset


\begin_inset Formula $^{29}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://code.google.com/apis/maps/documentation/overlays.html
\backslash
#Encoded_Polylines}{
\end_layout

\end_inset

http://code.google.com/apis/maps/documentation/overlays.html
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

#
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

Encoded
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

Polylines
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{visualize}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[3]{Visualize}{visualize}
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph*
Visualize
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "visualize"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The Visualize classes follow the same pattern as the previous classes.
 The classes currently supported by Cametrics to visualize the data are:
 NoVisual, Visual, NumberVisual, StringVisual, DatetimeVisual, and LocationVisua
l.
 The Visual module uses a third-party Google Charts API Python Client pygooglech
arts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id63}{
\end_layout

\end_inset

30
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 to minimize the load on the developers to derive helper functions to generate
 a url.
 The NoVisual class has a simple interface: 
\family typewriter
get
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

url
\family default
 and 
\family typewriter
add
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

labels
\family default
.
 The Visual class overrides the 
\family typewriter
get
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

url
\family default
, and its purpose is to get the correct chart according to the 
\family typewriter
cht
\family default
 parameter passed in the query string, and to set the values and keys that
 the chart needs to add as the data and values for the chart.
 Lastly, it generates the url and appends all non-visual specific parameters
 to the resultant url.
 This in effect opens the Google Chart API for the organizer or user to
 modify at their leisure without having the Visual classes to reproduce
 the same behaviors.
 For example, one can pass the chart color parameter (
\family typewriter
chco
\family default
) and the Visual classes will ignore this parameter and the Google Charts
 API will do the necessary work so that the chart uses that color scheme.
\end_layout

\begin_layout Standard

\size scriptsize
The NumberVisual which matches the same types as the NumberSummary types,
 simply overrides the 
\family typewriter
add
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

labels
\family default
 method so that the order and position of the values and keys are appropriate
 when visualizing numerical data.
\end_layout

\begin_layout Standard

\size scriptsize
The other visual: String, Datetime, and Location, lack a complete implementation
 and currently behave as a NumberVisual.
 The Datetime visual will soon incorporate visualization for timelines and
 support for the '.' separated histograms like the 
\family typewriter
hour.weekday
\family default
 histogram (a timecard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id64}{
\end_layout

\end_inset

31
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

).
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id63}{
\end_layout

\end_inset


\begin_inset Formula $^{30}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://pygooglechart.slowchop.com/}{
\end_layout

\end_inset

http://pygooglechart.slowchop.com/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id64}{
\end_layout

\end_inset


\begin_inset Formula $^{31}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://dustin.github.com/2009/01/11/timecard.html}{
\end_layout

\end_inset

http://dustin.github.com/2009/01/11/timecard.html
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{client-libraries}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Client Libraries}{client-libraries}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Client Libraries
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "client-libraries"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
At this time, Cametrics has released a PHP client.
 Python and JavaScript clients are next to being released.
 The two main functions of the PHP client are 
\family typewriter
initialize
\family default
 and 
\family typewriter
measure
\family default
.
 The 
\family typewriter
initialize
\family default
 function's first argument is the 
\family typewriter
secret
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

key
\family default
 as given by the Cametrics website in the campaign details page, and the
 second argument is for modifying the default options that the client uses
 like changing the hostname (typically, for local testing) or modify the
 request size required before the client can post to the server.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{bulk-uploads}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Bulk Uploads}{bulk-uploads}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Bulk Uploads
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "bulk-uploads"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The early development of the client 
\family typewriter
POST
\family default
-ed to the Cametrics server at every 
\family typewriter
measure
\family default
 call.
 This seemed appropriate when testing locally, but one of the lessons learned
 from working with the Google App Engine, is that doing a request per every
 call of 
\family typewriter
measure
\family default
 does not scale.
 For example, the What's Invasive logging script file has 8 measurements.
 At 8 requests per execution, PHP began to limit on the amount of memory
 and resources that the system can consume.
 As a result, the client and Cametrics were modified to allow bulk uploading.
 In this manner, the execution of the script would only request at the end
 of the script execution.
 This reduced the latency of the script.
 The results are shown in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#evaluation}{
\end_layout

\end_inset

Evaluation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of Cametrics.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{request-size}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Request Size}{request-size}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Request Size
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "request-size"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
In addition to the bulk upload feature that resulted out of too many requests
 to the server, another emerging problem was exceeding the deadline allowed
 for an execution of a python script on Google.
 See 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#limitations-and-requirements}{
\end_layout

\end_inset

Limitations and Requirements
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 for more information on the deadline exceeded exception.
 As a temporary work around, the PHP client trades, reduced latency for
 guarantee that the data passed to the server is saved.
 Notably, this should not be something that a client library should be concerned
 of, but until a more permanent solution is in place on the Google App Engine
 -- like immediately saving any unsaved Python objects to Memcached before
 the script is terminated -- the client reduces the amount of data Cametrics
 has to process.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{input-processing}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Input Processing}{input-processing}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Input Processing
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "input-processing"

\end_inset

 
\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
scalebox{0.500000}{
\end_layout

\end_inset


\begin_inset Graphics
	filename input_overview.png

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size scriptsize
An overview of the input processing pipeline as data is received by Cametrics.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{framework-of-input-processing}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Framework of Input Processing}{framework-of-input-processing}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Framework of Input Processing
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "framework-of-input-processing"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
As illustrated in the figure above, during a HTTP POST to the system the
 participant's data will be processed in a pipeline fashion.
 For each value a datum (Storage) entry is created (but not yet pushed to
 the datastore) and the datum entity (now an actual Storage entity) is prepared
 by the correct 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#stat}{
\end_layout

\end_inset

Stat
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 module which will augment the entity if necessary.
 During the calculate method of the stats, the necessary statistic entity
 and histogram entities are created and incremented.
\end_layout

\begin_layout Standard

\size scriptsize
After the datum passes through the processing (without an invalidation from
 the prepare method) the data is stored in local memory (in a Python list).
 The created or retrieved statistics and histograms are also kept locally
 in two separate data structures.
 The first, a global private variable 
\family typewriter

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

STATS
\family default
 is a dictionary indexed by the statistic's key (or generated key by using
 the campaign key and namespace value -- important to prevent unnecessary
 datastore transactions).
 Likewise a 
\family typewriter

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

HISTS
\family default
 global private variable exists for all the histograms that are retrieved
 or created.
 On the next datum, the storage entity is created but the stats and histograms
 are checked if they exist locally in the 
\family typewriter

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

STATS
\family default
 and 
\family typewriter

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

HISTS
\family default
 data structures to be reused and updated.
 This had a significant decrease in the latency for input processing.
 Discussion on the evaluation of Cametrics in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#evaluation}{
\end_layout

\end_inset

Evaluation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section.
\end_layout

\begin_layout Standard

\size scriptsize
After all the data is processed and is waiting to be saved, the send to
 datastore combines all the data, statistics, and histogram entities into
 a single list.
 As mentioned in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#limitations-and-requirements}{
\end_layout

\end_inset

Limitations and Requirements
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 subsection we were surprised that we could not put a large (over 500 entities
 in a list) into the datastore in a single transaction.
 Due to the timeout exceptions that were raised by the datastore, the Send
 to Datastore method had to be redesigned so as to prevent that the complete
 transaction from being rolled back -- and preventing any data from being
 saved.
 
\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
scalebox{0.500000}{
\end_layout

\end_inset


\begin_inset Graphics
	filename send_to_datastore.png

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size scriptsize
Pictorial explanation of the send to datastore algorithm and an example
 of an erroneous entity and how the algorithm adjust against it
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Likewise, we found that if an entity could not be saved, for any particular
 reason, into the datastore then the complete set of entities would be rolled
 back.
 The above figure demonstrates how the most current send to datastore algorithm
 works.
 A while loop that terminates if the entity list is empty, shifts the first
 entity (initialized to the complete entity list as previously mentioned)
 into a current variable.
 The current set of entities is then attempted to be stored into the Google
 datastore.
 If the datastore does not raise an exception then the loop continues.
 Otherwise, on an exception (timeout, or otherwise) the current data set
 is split in half and the entities list is appended with the first and second
 half of the last current set.
 In the next iteration of the loop the first half, or any other set previously
 in the list, will then be attempted to be put into the datastore.
 This continues until all the entities have been saved.
\end_layout

\begin_layout Standard

\size scriptsize
In the case that there is an erroneous entity in the data set, the algorithm
 is capable of withdrawing the datum from the set after a series of iterations
 (if the length of the data set is one, the datum is removed).
 The datum is logged and used later for further testing.
 As shown on the right of the above figure, the complete data set could
 not be put to the datastore because of the red malicious entity.
 The set is split and appended to the empty list (since it was the first
 iteration, and the complete set was shifted out of the list).
 In the second iteration, the first half of the original set will still
 be unable to be stored in the datastore, and further split.
 In the third iteration, the second half of the original set will be stored
 and this pattern continues until the fifth iteration when the erroneous
 data set (now length of 1) will be discarded and the iteration continues
 to store the last (white) entity.
\end_layout

\begin_layout Standard

\size scriptsize
In the future, we wish to minimize the number of iterations.
 For large quantity of entities in the list, the large number of iterations
 may cost (in time) more than then if we had saved each datum at a time.
 We can reduce the number of iterations by diving the sets more appropriately
 to the observed maximum length of set allowed.
 This can be done by analyzing the history of the most allowed number of
 entities saved (discussed in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#evaluation}{
\end_layout

\end_inset

Evaluation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 briefly) and dividing the complete set into n-number of maximum allowed
 stored length.
 This system information can be stored in the datastore or persistently
 in Memcached.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{output-generation}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Output Generation}{output-generation}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Output Generation
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "output-generation"

\end_inset

 
\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
scalebox{0.500000}{
\end_layout

\end_inset


\begin_inset Graphics
	filename output_overview.png

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size scriptsize
An overview of the output generation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{framework-of-output-processing}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[2]{Framework of Output Processing}{framework-of-output-processing}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Framework of Output Processing
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "framework-of-output-processing"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
For all HTTP gets whose public or secret key retrieves a campaign the path
 (after the namespace, see section 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#uri-format}{
\end_layout

\end_inset

URI Format
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 for more information) is used to execute one of the methods provided by
 the Renderer module.
 Note that the format requested in the URI selects the appropriate Renderer
 module.
 Depending on the Renderer module, the object returned from the Renderer
 (varies between the function called) will be passed to the Visual module
 that is selected by the type of the object resultant from the Renderer
 module.
\end_layout

\begin_layout Standard

\size scriptsize
The objects that may be returned by the Renderer module are as follows:
 
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

render
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

stats:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 This may be the statistic entity, or dictionary, for the namespace and
 campaign.
 The object may also be a value or dictionary (for Histograms) within the
 statistic object.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

render
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

values:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 This is strictly all the values stored in the datastore.
 In the future, this can be a range of values or single values.
 Moreover, it would be appropriate to return a resolution of the data.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

render:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 Depending on the Renderer this may return the values of 
\family typewriter
render
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

stats
\family default
 and 
\family typewriter
render
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

values
\family default
 plus the type of a data series.
\end_layout

\begin_layout Standard

\size scriptsize
The Renderer may then write the output to the stream and if necessary, the
 Visual module may redirect the request to a permanent URL for the URI given.
 For more information on the construction of the output or URL for the redirect,
 refer to the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#renderer}{
\end_layout

\end_inset

Renderer
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 and 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#visualize}{
\end_layout

\end_inset

Visualize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 sections.
\end_layout

\begin_layout Standard

\size scriptsize
The first design of the output processing did not separate the paths into
 the three aforementioned paths.
 After a long series of values had been stored in the datastore, we noticed
 that too many Deadline exceptions were being thrown.
 As a result, we have elected to only retrieve from the data when and if
 it is necessary.
 Moreover, the current paths do not reflect a pipeline structure.
 The next iteration of the visualization framework should follow this so
 that a single iteration is necessary to prepare a datum into visualization.
\end_layout

\begin_layout Standard

\size scriptsize
The current performance of the output (the limits), is yet to be fully quantifie
d but some statistics of the current performance is provided in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#evaluation}{
\end_layout

\end_inset

Evaluation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hrulefill
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{evaluation}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Evaluation}{evaluation}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Evaluation
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "evaluation"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{test-setup}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Test Setup}{test-setup}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Test Setup
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "test-setup"

\end_inset

 
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Using two computers:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\series bold
client
\series default
, a (separate) computer that acts as multiple users sending multiple 
\family typewriter
POST
\family default
 to the 
\emph on
server
\end_layout

\begin_layout Itemize

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\series bold
server
\series default
, a (separate) computer that receives the 
\emph on
data
\emph default
 from the 
\emph on
users/clients
\emph default
 and will 
\family typewriter
syslog
\family default
 and 
\family typewriter
Cametrics:measure
\end_layout

\end_deeper
\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{client-setup}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Client Setup}{client-setup}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Client Setup
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "client-setup"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The client is on a 
\series bold
separate
\series default
 network than the sever and is using the FunkLoad functional and load web
 tester
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id66}{
\end_layout

\end_inset

32
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 tool to simulate the user/device.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id66}{
\end_layout

\end_inset


\begin_inset Formula $^{32}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://funkload.nuxeo.org/}{
\end_layout

\end_inset

http://funkload.nuxeo.org/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{server-setup}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Server Setup}{server-setup}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Server Setup
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "server-setup"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The server is dedicated to the tests and 
\emph on
not
\emph default
 running/hosting any other project.
\end_layout

\begin_layout Standard

\size scriptsize
Server Specification:
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{lineblock}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

0em
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 CPU: Intel(R) Core(TM)2 Quad CPU Q8300 @ 2.50GHz 
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Ram/Memory: 512MB 
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Disk Space: 20GB 
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

[
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

]
\end_layout

\end_inset

 Bandwidth: 1500GB 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{lineblock}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The server also has the FunkLoad Monitor Server
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id68}{
\end_layout

\end_inset

33
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 to monitor the health of the server to understand the different load the
 system has with and without the use of Cametrics.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id68}{
\end_layout

\end_inset


\begin_inset Formula $^{33}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://funkload.nuxeo.org/
\backslash
#monitor-server}{
\end_layout

\end_inset

http://funkload.nuxeo.org/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

#
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

monitor-server
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{results}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Results}{results}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Results
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "results"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The following results summarize the average response time and the number
 of requests per a 45 second deadline.
 We do not compare the ideal case (using 
\family typewriter
syslog
\family default
) because the charts would not be of significance.
 In comparison, the ideal case performs linearly to the number of concurrent
 users on the system.
 In the other hand, as seen below in the graphs server (the machine sending
 measurements to Cametrics) exhibits a worsening of performance as the number
 of concurrent users increases.
\end_layout

\begin_layout Standard

\size scriptsize
Now, the What's Invasive campaign needs to support 9 participants and the
 worst case of 40 concurrent users is a very unlikely condition.
 When looking at the following charts, however, it is best to treat the
 typical case in the range of 4-12 concurrent users.
 
\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
scalebox{0.500000}{
\end_layout

\end_inset


\begin_inset Graphics
	filename rrt-chart.png

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size scriptsize
Seven average response times against a varying number of concurrent users.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
scalebox{0.500000}{
\end_layout

\end_inset


\begin_inset Graphics
	filename sts-chart.png

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size scriptsize
Successful requests per 45 seconds against various concurrent users for
 seven different test cases
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

v1 Cametrics PHP client:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 This is the first iteration of the PHP client (using CURL).
 In this version, the client does a POST on each time the script executes
 the 
\family typewriter
measure
\family default
 function.
 As discussed before, we saw the worst-case performance in this version
 because of the large number of requests occurring.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

v1 with Bulk, Curl:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 This is an optimization to the PHP client in that the only POST made to
 the server is one massive upload of all the data collected when the script
 finished execution.
 As seen this showed some improvements in the response time but the number
 of requests per 45 seconds is still in the lower end of the results.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

v1 with Bulk, fopen:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 Looking at the successful tests/45 second graph this and the next test
 case were used to compare if the performance of the client depended strongly
 on the function used to send the HTTP post.
 We compared the CURL, fopen, and sockets.
 The fopen seemed to be worst in most of the range of users.
 This is especially true after 12 users.
 We expect this to be as a result of PHP limits on the number of concurrent
 fopens allowed per system.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

v1 with Bulk, fsockets:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 Sockets are the lowest implementation to the stream of data.
 We found sockets to be the least performing of the three test cases.
 It is unclear as to why this may be the case.
 From the results, the current version of the client (and following tests)
 use the CURL function to upload the data.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

v2 of Cametrics:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 This is the single transaction for bulk uploads optimization done on Cametrics
 (not the client).
 As seen the client has an immediate benefit in the response time.
 Other optimizations were to separate the POST critical path from the Django
 (zipimported) path.
 This immediately has a reduction in the latency, as seen from Cametrics.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

v3 of Cametrics, limited:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 Version 3 of Cametrics indicates that this version has the newest algorithm
 of the send to datastore that had been previously mentioned in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#framework-of-input-processing}{
\end_layout

\end_inset

Framework of Input Processing
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section.
 The limited indicates that the Cametrics PHP client is limited in the 
\family typewriter
request.size
\family default
 as discussed in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{
\backslash
#request-size}{
\end_layout

\end_inset

Request Size
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 subsection.
 At the time of this test case the client was limited to 25 data points.
 This meant that the test case might have POST to the server more times,
 than if the client had not been limited.
\end_layout

\begin_layout Description

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

v3 of Cametrics, unlimited:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leavevmode
\end_layout

\end_inset

 In order to understand the request size implications, we created a last
 test case to understand if the increased number of POST requests to the
 server had reduced the performance of the PHP client.
 As seen from the charts, the best performing test case is this case.
 As a result, the PHP client should be simplified to not have to deal with
 the deadline issues on the server end.
\end_layout

\begin_layout Standard

\size scriptsize
As seen from the ongoing stress tests, the server is the direct effect as
 to how fast the PHP (and the other clients in other languages) client will
 perform.
 First, the optimizations that have been described in this paper had a significa
nt improvement on the performance of the client.
 Second, the limits imposed on the client in order to ensure that Cametrics
 does not raise a Deadline exception do show a negative effect on the performanc
e.
 This requires further investigation on Cametrics' POST critical path and
 to ensure that it returns a 200 status code (or 
\family typewriter
ACK
\family default
) to the client so that the client can return finish as soon as possible.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{developer-survey}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Developer Survey}{developer-survey}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Developer Survey
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "developer-survey"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Although the number of developers currently helping to test is small the
 survey does answer and raise some questions of the project.
\end_layout

\begin_layout Standard

\size scriptsize
When asked, 
\begin_inset Quotes eld
\end_inset

what was the most difficult concept to understand of Cametrics,
\begin_inset Quotes erd
\end_inset

 there was disparity in the responses but one of the developers indicated
 that the concept and purpose behind Cametrics was not easily understood.
 From other responses in the survey, the namespace and type concept were
 not clearly understood by some of the developers.
 This indicates that the project has not done a good job in documenting,
 giving examples, or provides enough guideline on how to understand the
 capabilities and limits of Cametrics.
\end_layout

\begin_layout Standard

\size scriptsize
The rest of the responses, however, indicate that Cametrics is shown to
 be flexible and responsive.
 When asked, 
\begin_inset Quotes eld
\end_inset

What is the Cametrics' best feature
\begin_inset Quotes erd
\end_inset

 overwhelmingly the Summaries and Statistics were chosen as the best feature.
 Coming in second were the flexibility and visualizations of the system.
 Even though one of the organizers indicated that the concepts were not
 understood, they found that it was not difficult to setup (about 1-10 minute
 estimated setup times) for the organizers.
\end_layout

\begin_layout Standard

\size scriptsize
As shown in the previous evaluation, the stress tests do indicate that Cametrics
 may seem to be slow or unresponsive.
 When asked, 
\begin_inset Quotes eld
\end_inset

How is the 
\begin_inset Quotes erd
\end_inset

feel
\begin_inset Quotes eld
\end_inset

 of the system ...
\begin_inset Quotes erd
\end_inset

 for uploading and accessing the data, the average response showed about
 2-3 second wait time.
 The uploading of data seemed more responsive (according to one of the organizer
s) and this may be because of an ongoing analysis and optimization on that
 critical path.
 More investigation and test cases are needed to understand why the developers
 showed that Cametrics had a 2-3 second response for accessing the data.
\end_layout

\begin_layout Standard

\size scriptsize
When asked, if they 
\begin_inset Quotes eld
\end_inset

intend to continue using ...
\begin_inset Quotes erd
\end_inset

 and if they would suggest to their friends to use Cametrics, an overwhelming
 response of yes from all the developers indicate all the organizers approve
 that project as a tool that may have a significant part in their projects.
 As such, it is warranted to keep optimizing and improving the summaries.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hrulefill
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{conclusions}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Conclusions}{conclusions}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Conclusions
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "conclusions"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
The project thus far is successful in being simple, flexible, and extensible.
 The organizers have indicated in the surveys that it took them less than
 3 minutes to setup and start logging data.
 Moreover, the organizers spent about the same time to embed on their web
 pages.
 Cametrics is flexible by allowing the organizer to set their data set key
 (the namespace) as they would like without having to have a mapping between
 a hashed key to their data set.
 Moreover, the system already accepted a large number of input types: string,
 integer, float, long, datetime, timestamp, location, gps, and more planned.
 All of these have summaries and histograms that automatically have visualizatio
ns that the organizer can use on run time.
 A feat.
 not yet possible with any other service.
 Although Cametrics has had a run in with scalability issues with the Google
 App Engine, learning from the difficulties has improved the design of the
 system and the future work will improve even further what Cametrics has
 already succeeded in doing well.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hrulefill
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{future-work}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[0]{Future Work}{future-work}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Future Work
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "future-work"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Because Cametrics is a generic logging, aggregator, and visualization platform
 there are many features that have yet to be implemented.
 Moreover, the organizers of the campaigns already have a running list of
 requests that would make their development lives even easier.
 This section outlines a few of such requests and plans for the future of
 Cametrics.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{filtering-granularity-and-selecting-data}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Filtering, Granularity, and Selecting Data}{filtering-granularity
-and-selecting-data}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Filtering, Granularity, and Selecting Data
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "filtering-granularity-and-selecting-data"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
An ever-growing request is to select particular data from the data set --
 the first and last collected data, for example.
 Additionally, a date range of when it was created would improve responsiveness
 since this could reduce the amount of processing on the GET critical path.
 Other improvements would be the granularity of the data.
 This is a tougher order to server, however, since Google App Engine does
 not allow complex queries in their query language.
 The best one can do is to define bookmarks in the data set for certain
 granularity.
 When the granularity is requested, one would iterate for all the bookmarks
 that match the granularity (which reference the entities that match the
 bookmark).
 Thorough testing is needed to ensure that the processing is not too strenuous
 on the system.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{summaries-of-summaries}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Summaries of Summaries}{summaries-of-summaries}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Summaries of Summaries
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "summaries-of-summaries"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Pardon the confusion.
 An example should help make this idea concrete.
 At this time, Cametrics adds a created
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

on attribute for each of the datum that are 
\family typewriter
POST
\family default
-ed.
 Summaries of Summaries would mean that the created
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

on would not be an additional attribute on the datum, but rather an additional
 data set automatically created for the datum.
 This would mean that there would be a direct association between the 
\family typewriter
namespace
\family default
 that the user used to POST the datum, and the 
\family typewriter
namespace.created
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

on
\family default
 that Cametrics would automatically create for the user.
 More needs to be researched in how these associations would occur (because
 of the complexity in the queries), and how the responses by the Renderer
 and Visualize modules should behave.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{event-system}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Event System}{event-system}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Event System
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "event-system"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
As of recent there are more web articles on 
\begin_inset Quotes eld
\end_inset

Web Hooks
\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raisebox{.5em}[0em]{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hyperlink{id70}{
\end_layout

\end_inset

34
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 Web Hooks are similar to callbacks in Event based languages.
 A user registered to a web service can register a callback, or web hook,
 in the service for when an event would occur.
 This is becoming more and more common in popular web services and we think
 that Cametrics would benefit greatly if we implemented an Event System.
 An organizer, for instance, can register a URL for when a value passed
 into Cametrics is higher or lower a threads hold.
 This can signify an anomaly from the expected trend.
 Moreover, histograms or other objects in the summaries can be listened
 to for an event to occur and the organizer would be notified via a web
 hook that the event has occurred.
 This is an asynchronous, and cheap, call.
 It would simply be a POST to their server of the event and reference to
 the object that caused the event.
 Other interesting applications would be a PHP client that would update
 a local cache of the organizer.
 Any new data or summaries, after a set number of new data (to minimize
 calls between servers), would be posted to the organizer's server's caching
 system.
 This way the calls between their server and Cametrics (for visualizations,
 for example) are minimized -- in other words a cooperative caching mechanism.
 
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{id70}{
\end_layout

\end_inset


\begin_inset Formula $^{34}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
href{http://blog.webhooks.org/}{
\end_layout

\end_inset

http://blog.webhooks.org/
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{more-internal-logging}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{More Internal Logging}{more-internal-logging}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
More Internal Logging
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "more-internal-logging"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Use Cametrics to measure system usage, and performance.
 As seen in the bulk upload and the mass saving to the datastore.
 Many interesting, and unexpected, anomalies occur because of working on
 the Google App Engine platform.
 If these can be quantified (for the example the maximum number of entities
 that can be saved at one time) or observed (which visualizations are used
 the most) then critical paths can be optimized.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{summary-and-visualization-snapshot-system}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Summary and Visualization Snapshot System}{summary-and-visualizat
ion-snapshot-system}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Summary and Visualization Snapshot System
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "summary-and-visualization-snapshot-system"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Currently the system does an aggregation of all the running data.
 This is only partially useful.
 For questions that require a comparison between days, weeks, or months
 it is difficult (especially because of lack of selection mechanism) to
 compare values or even summaries.
 We have already begun to devise a way to 
\begin_inset Quotes eld
\end_inset

snapshot
\begin_inset Quotes erd
\end_inset

 the summaries and 
\begin_inset Quotes eld
\end_inset

visualizations
\begin_inset Quotes erd
\end_inset

 into frozen sets.
 Then one can request for a specific frozen or live summary or visualization
 of the namespace.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{memcached-and-persistence}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Memcached and Persistence}{memcached-and-persistence}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Memcached and Persistence
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "memcached-and-persistence"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
Through the work with the What's Invasive campaign one notices that on average
 the same statistics and histograms are used across multiple requests.
 If these objects can persist in Memcached without having to go to the datastore
, a large portion of the delay between requests can be cut by accessing
 these objects directly from the Memcached.
 Similarly, for visualizations, many of the requests for GChart, values,
 or statistics may not have changed since the previous request.
 To improve the responsiveness of these requests, Memcached can be updated
 as data comes in or as requested by a user visiting an organizer's site.
 Due to quota limits on the Memcached, significant research on the use of
 the Memcached for various functions of Cametrics is necessary to understand
 if this is feasible.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%___________________________________________________________________________
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hypertarget{removing-or-guessing-the-type-input-argument}{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pdfbookmark[1]{Removing or Guessing the 'type' input argument}{removing-or-guess
ing-the-type-input-argument}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Removing or Guessing the 'type' input argument
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset CommandInset label
LatexCommand label
name "removing-or-guessing-the-type-input-argument"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
This may not be a high priority future work, since I think that one of the
 strengths of Cametrics is that the type of the input can be defined by
 the organizer/developer.
 As mentioned, is the type does not fit the summary that the developer is
 looking then them or via a request, a new Summary can match the new type
 for the correct summarization.
 Removing, or at least reducing, the number of times the type is used in
 the Cametrics can help to reduce the amount of developer responsibilities
 so this may be beneficial if completed.
\end_layout

\end_body
\end_document
